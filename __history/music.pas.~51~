unit music;

interface

uses FMX.Media,system.Classes,FMX.Dialogs,SysUtils,FMX.Forms,system.IOUtils,
      system.ZLib,uPack;

type mc = class

    public

    procedure PlayMusic(ResName,ResType, ResNewName: string);
    procedure SetMPlayerVolume(mp : TMediaPlayer;volume :single);
    procedure ExtractRes(ResName,ResType, ResNewName: string);
    procedure readCardNumber(cards :Tarray<string>;ty :integer);
    procedure UnPackBgmDic();

    constructor Create();
    destructor Destory();
end;

var BC :mc;

implementation


uses game,goos;

constructor mc.Create();
begin
   TPT:=  TPackTool.Create;

  showmessage(Tpath.GetDocumentsPath);

//  if not DirectoryExists(Tpath.GetDocumentsPath+PathDelim+'bgm')  then
//   begin
//     createDir(Tpath.GetDocumentsPath+PathDelim+'bgm');
//   end;
//    playMusic('SRC1','FILE1','1.mp3');

end;

destructor mc.Destory();
begin

end;

procedure mc.PlayMusic(ResName,ResType, ResNewName: string);
var
  fileName:string;
begin
  if goos.currentSystem='Windows' then
  begin
     fileName:= Tpath.GetDocumentsPath+PathDelim+'bgm'+PathDelim+ResNewName;
     if not fileExists(fileName) then
     begin
        ExtractRes(ResName,ResType,fileName);
     end;
  end
  else
  begin
    fileName:=Tpath.GetDocumentsPath+PathDelim+ResNewName;
  end;
  GameInterface.MediaPlayer1.FileName:=fileName;
  GameInterface.MediaPlayer1.Play;
end;


 procedure mc.ExtractRes(ResName,ResType, ResNewName: string);   //释放资源文件
var
    Res: TResourceStream;
begin
  Res := TResourceStream.Create(Hinstance, Resname, Pchar(ResType));
  Res.SaveToFile(ResNewName);
  Res.Free;
end;


procedure mc.readCardNumber(cards : Tarray<string>;ty :integer);
//var
// str : string;
begin
 case length(cards) of
   0:
   begin

   end;
   1:
   begin
   delete(cards[0],1,1);
    playMusic('SRC'+cards[0],'FILE'+cards[0],cards[0]+'.mp3');
//    playMusic('cards[0]'+'.mp3');
   end;
 end;

end;



procedure mc.SetMPlayerVolume(mp :TMediaPlayer;volume : single);
begin
    mp.Volume:=volume;
end;

end.

